@{
    ViewData["Title"] = "Employee Management";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <h2>Employee Management</h2>
            <p>Manage employee information and role assignments.</p>
        </div>
    </div>

    <div class="row mb-3">
        <div class="col-12">
            <button id="addEmployeeBtn" class="btn btn-success">Add New Employee</button>
        </div>
    </div>

    <!-- Separator Line -->
    <hr class="my-4" style="border-top: 2px solid #dee2e6;">

    <!-- Employees Grid -->
    <div class="row">
        <div class="col-12">
            <div id="employeesGrid"></div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        /* Fix Kendo Grid sort icons */
        .k-grid-header .k-header .k-link .k-icon {
            font-size: 12px !important;
            width: 12px !important;
            height: 12px !important;
        }
        
        .k-grid-header .k-header .k-link .k-icon.k-i-sort-asc-sm,
        .k-grid-header .k-header .k-link .k-icon.k-i-sort-desc-sm {
            font-size: 12px !important;
            width: 12px !important;
            height: 12px !important;
        }
        
        /* Fix filter menu positioning */
        .k-filter-menu {
            z-index: 10000 !important;
        }
        
        /* Consistent header styling */
        .k-grid-header .k-header {
            font-weight: 600;
            background-color: #f8f9fa;
        }
    </style>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            console.log("Initializing Employees Grid...");
            
            // Initialize Kendo Grid
            $("#employeesGrid").kendoGrid({
                dataSource: {
                    transport: {
                        read: {
                            url: "/Employee/GetEmployees",
                            type: "GET",
                            dataType: "json"
                        }
                    },
                    schema: {
                        model: {
                            id: "id",
                            fields: {
                                id: { type: "number" },
                                firstName: { type: "string" },
                                lastName: { type: "string" },
                                fullName: { type: "string" },
                                email: { type: "string" },
                                department: { type: "string" },
                                position: { type: "string" },
                                isActive: { type: "boolean" },
                                createdDate: { type: "date" },
                                rolesCount: { type: "number" }
                            }
                        }
                    },
                    pageSize: 10
                },
                height: 500,
                sortable: true,
                filterable: {
                    mode: "row"
                },
                pageable: {
                    refresh: true,
                    pageSizes: [5, 10, 20, 50],
                    buttonCount: 5
                },
                columns: [
                    { field: "id", title: "ID", width: "80px" },
                    { field: "fullName", title: "Full Name", width: "200px" },
                    { field: "email", title: "Email", width: "250px" },
                    { field: "department", title: "Department", width: "150px" },
                    { field: "position", title: "Position", width: "200px" },
                    { field: "rolesCount", title: "Roles Count", width: "120px" },
                    { 
                        field: "isActive", 
                        title: "Active", 
                        width: "100px",
                        template: "#= isActive ? 'Yes' : 'No' #"
                    },
                    { 
                        field: "createdDate", 
                        title: "Created Date", 
                        width: "150px",
                        template: "#= kendo.toString(kendo.parseDate(createdDate), 'MM/dd/yyyy') #"
                    },
                    {
                        title: "Actions",
                        width: "200px",
                        template: "<button class='btn btn-sm btn-info view-details' data-id='#= id #'>View Details</button> " +
                                 "<button class='btn btn-sm btn-primary manage-roles' data-id='#= id #'>Manage Roles</button>"
                    }
                ],
                dataBound: function(e) {
                    console.log("Employees Grid data bound. Records:", e.sender.dataSource.data().length);
                },
                error: function(e) {
                    console.error("Employees Grid error:", e);
                }
            });

            // Add new employee
            $("#addEmployeeBtn").click(function () {
                var firstName = prompt("Enter first name:");
                if (firstName) {
                    var lastName = prompt("Enter last name:");
                    if (lastName) {
                        var email = prompt("Enter email:");
                        var department = prompt("Enter department:");
                        var position = prompt("Enter position:");
                        
                        $.ajax({
                            url: "/Employee/CreateEmployee",
                            type: "POST",
                            contentType: "application/json",
                            data: JSON.stringify({
                                FirstName: firstName,
                                LastName: lastName,
                                Email: email || "",
                                Department: department || "",
                                Position: position || ""
                            }),
                            success: function (response) {
                                if (response.success) {
                                    alert("Employee created successfully!");
                                    $("#employeesGrid").data("kendoGrid").dataSource.read();
                                } else {
                                    alert("Error: " + response.message);
                                }
                            },
                            error: function (xhr, status, error) {
                                alert("Error creating employee: " + error);
                            }
                        });
                    }
                }
            });

            // View employee details
            $(document).on('click', '.view-details', function () {
                var employeeId = $(this).data('id');
                window.location.href = '/Employee/Details/' + employeeId;
            });

            // Manage employee roles
            $(document).on('click', '.manage-roles', function () {
                var employeeId = $(this).data('id');
                // TODO: Open role management modal
                alert("Role management for employee " + employeeId + " will be implemented");
            });
        });
    </script>
}





